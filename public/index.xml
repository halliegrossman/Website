<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Portfolio</title>
    <link>/</link>
    <description>Recent content on Portfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 02 Oct 2016 22:55:05 -0400</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Projects</title>
      <link>/projects/</link>
      <pubDate>Sun, 02 Oct 2016 22:55:05 -0400</pubDate>
      
      <guid>/projects/</guid>
      <description>Projects Here are some projects I have recently completed:
  Exploratory Data Analysis with Tidyverse Tools
  Modeling, Testing, and Classification
  </description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/blog/2015-07-23-r-rmarkdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/blog/2015-07-23-r-rmarkdown/</guid>
      <description>R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>/blog/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>/blog/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>/blog/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>/blog/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>/blog/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Project 1: Exploratory Data Analysis</title>
      <link>/project1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/project1/</guid>
      <description>0. Introduction (4 pts) library(dplyr) library(ggplot2) library(ggExtra) library(tidyverse) library(tidyselect) library(tidyr) library(reshape) library(reshape2) library(cluster) library(GGally) library(knitr) library(ggridges) library(readr) original_MC &amp;lt;- read_csv(&amp;quot;Medical_Examiner_Case_Archive.csv&amp;quot;) MC_1 &amp;lt;- original_MC %&amp;gt;% select(1:7) MC_2 &amp;lt;- original_MC %&amp;gt;% select(-(2:7)) MC_MERGED &amp;lt;- MC_1 %&amp;gt;% full_join(MC_2) I have chosen a dataset containing the details on the medical cases of deaths that have occurred in Cook County, IL. I acquired this dataset from the Cook County Government’s website (https://datacatalog.cookcountyil.gov/Public-Safety/Medical-Examiner-Case-Archive/cjeq-bs86). Since the variables within the dataset are quite specific, I was not able to find a second dataset that would join well with this one.</description>
    </item>
    
    <item>
      <title>Project 2: Modeling, Testing, and Predicting</title>
      <link>/project2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/project2/</guid>
      <description>INTRODUCTION-
ICU&amp;lt;-read.csv(&amp;quot;https://vincentarelbundock.github.io/Rdatasets/csv/Stat2Data/ICU.csv&amp;quot;) %&amp;gt;% select(-c(1)) ICU&amp;lt;-ICU %&amp;gt;% mutate(Gender=ifelse(Sex==1,&amp;quot;Female&amp;quot;,&amp;quot;Male&amp;quot;)) %&amp;gt;% mutate(Outcome=ifelse(Survive==1,&amp;quot;Survived&amp;quot;,&amp;quot;Died&amp;quot;)) %&amp;gt;% mutate(Admission=ifelse(Emergency==1,&amp;quot;Emergency&amp;quot;,&amp;quot;Elective&amp;quot;)) %&amp;gt;% mutate(Infected=ifelse(Infection==1,&amp;quot;Yes&amp;quot;,&amp;quot;No&amp;quot;)) %&amp;gt;% mutate(AgeGroup=case_when(Age&amp;lt;=49 ~&amp;quot;Young&amp;quot;, Age&amp;lt;=69~&amp;quot;Middle&amp;quot;, Age&amp;gt;=70~&amp;quot;Older&amp;quot;)) I have chosen a dataset containing various details about patients in the ICU (Intensive Care Unit). The dataset contains information on 200 different patients (200 observations), and the original dataset contained the following variables: “ID” (patient ID code), “Survive” (where 1=patient survived to discharge and 0=patient died), “Age”&amp;quot; (in years), “AgeGroup” (where 1= young (under 50), 2= middle (50-69), 3 = old (70+)), “Sex” (where 1=female and 0=male), “Infection” (where 1=infection suspected and 0=no infection), “SysBP” (Systolic blood pressure measuerd in mmHg), “Pulse” (heart rate measured in beats per minute), and “Emergency” (where 1=emergency admission and 0=elective admission).</description>
    </item>
    
  </channel>
</rss>